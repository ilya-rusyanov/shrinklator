// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ilya-rusyanov/shrinklator/internal/handlers (interfaces: Shrinker)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod -package mocks -destination ./mocks/mock_shrinker.go . Shrinker
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entities "github.com/ilya-rusyanov/shrinklator/internal/entities"
	gomock "go.uber.org/mock/gomock"
)

// MockShrinker is a mock of Shrinker interface.
type MockShrinker struct {
	ctrl     *gomock.Controller
	recorder *MockShrinkerMockRecorder
}

// MockShrinkerMockRecorder is the mock recorder for MockShrinker.
type MockShrinkerMockRecorder struct {
	mock *MockShrinker
}

// NewMockShrinker creates a new mock instance.
func NewMockShrinker(ctrl *gomock.Controller) *MockShrinker {
	mock := &MockShrinker{ctrl: ctrl}
	mock.recorder = &MockShrinkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShrinker) EXPECT() *MockShrinkerMockRecorder {
	return m.recorder
}

// Expand mocks base method.
func (m *MockShrinker) Expand(arg0 context.Context, arg1 string) (entities.ExpandResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Expand", arg0, arg1)
	ret0, _ := ret[0].(entities.ExpandResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Expand indicates an expected call of Expand.
func (mr *MockShrinkerMockRecorder) Expand(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Expand", reflect.TypeOf((*MockShrinker)(nil).Expand), arg0, arg1)
}

// Shrink mocks base method.
func (m *MockShrinker) Shrink(arg0 context.Context, arg1 string, arg2 *entities.UserID) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Shrink", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Shrink indicates an expected call of Shrink.
func (mr *MockShrinkerMockRecorder) Shrink(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Shrink", reflect.TypeOf((*MockShrinker)(nil).Shrink), arg0, arg1, arg2)
}
